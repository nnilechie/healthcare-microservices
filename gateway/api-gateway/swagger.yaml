openapi: 3.0.0
info:
  title: Healthcare System API
  description: Comprehensive API for Healthcare Management System
  version: 1.0.0
  contact:
    name: Healthcare System Team
    email: support@healthcare.com

servers:
  - url: http://localhost:8080/api/v1
    description: Development server
  - url: https://api.healthcare.com/api/v1
    description: Production server

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Patient:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
        gender:
          type: string
          enum: [MALE, FEMALE, OTHER, PREFER_NOT_TO_SAY]
        email:
          type: string
          format: email
        phoneNumber:
          type: string
        medicalRecordNumber:
          type: string

    Appointment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        patientId:
          type: integer
          format: int64
        doctorId:
          type: integer
          format: int64
        appointmentDate:
          type: string
          format: date-time
        status:
          type: string
          enum: [SCHEDULED, CONFIRMED, CANCELLED, COMPLETED]
        type:
          type: string
          enum: [CONSULTATION, FOLLOW_UP, EMERGENCY, TELEMEDICINE]

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expiresIn:
                    type: integer
                  user:
                    type: object

  /patients:
    get:
      tags:
        - Patients
      summary: Get all patients
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: List of patients
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Patient'
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer

    post:
      tags:
        - Patients
      summary: Create a new patient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        201:
          description: Patient created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'

  /patients/{id}:
    get:
      tags:
        - Patients
      summary: Get patient by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Patient details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        404:
          description: Patient not found